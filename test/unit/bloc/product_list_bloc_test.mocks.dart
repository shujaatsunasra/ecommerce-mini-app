// Mocks generated by Mockito 5.4.4 from annotations
// in ecommerce_mini_app/test/unit/bloc/product_list_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ecommerce_mini_app/src/core/errors/failures.dart' as _i5;
import 'package:ecommerce_mini_app/src/features/product/domain/entities/product.dart'
    as _i8;
import 'package:ecommerce_mini_app/src/features/product/domain/entities/product_filters.dart'
    as _i7;
import 'package:ecommerce_mini_app/src/features/product/domain/entities/product_list.dart'
    as _i6;
import 'package:ecommerce_mini_app/src/features/product/domain/repositories/product_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRepository extends _i1.Mock implements _i3.ProductRepository {
  MockProductRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ProductList>> fetchProducts({
    int? limit = 20,
    int? skip = 0,
    String? search,
    Map<String, String>? filters,
    _i7.ProductFilters? productFilters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchProducts,
          [],
          {
            #limit: limit,
            #skip: skip,
            #search: search,
            #filters: filters,
            #productFilters: productFilters,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.ProductList>>.value(
            _FakeEither_0<_i5.Failure, _i6.ProductList>(
          this,
          Invocation.method(
            #fetchProducts,
            [],
            {
              #limit: limit,
              #skip: skip,
              #search: search,
              #filters: filters,
              #productFilters: productFilters,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ProductList>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.Product>> fetchProductDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchProductDetail,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.Product>>.value(
            _FakeEither_0<_i5.Failure, _i8.Product>(
          this,
          Invocation.method(
            #fetchProductDetail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.Product>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ProductList>> searchProducts({
    required String? query,
    int? limit = 20,
    int? skip = 0,
    _i7.ProductFilters? additionalFilters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchProducts,
          [],
          {
            #query: query,
            #limit: limit,
            #skip: skip,
            #additionalFilters: additionalFilters,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.ProductList>>.value(
            _FakeEither_0<_i5.Failure, _i6.ProductList>(
          this,
          Invocation.method(
            #searchProducts,
            [],
            {
              #query: query,
              #limit: limit,
              #skip: skip,
              #additionalFilters: additionalFilters,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ProductList>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ProductList>> getProductsByCategory({
    required String? category,
    int? limit = 20,
    int? skip = 0,
    _i7.ProductFilters? additionalFilters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductsByCategory,
          [],
          {
            #category: category,
            #limit: limit,
            #skip: skip,
            #additionalFilters: additionalFilters,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.ProductList>>.value(
            _FakeEither_0<_i5.Failure, _i6.ProductList>(
          this,
          Invocation.method(
            #getProductsByCategory,
            [],
            {
              #category: category,
              #limit: limit,
              #skip: skip,
              #additionalFilters: additionalFilters,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ProductList>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ProductList>> getCachedProducts({
    String? searchQuery,
    _i7.ProductFilters? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedProducts,
          [],
          {
            #searchQuery: searchQuery,
            #filters: filters,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.ProductList>>.value(
            _FakeEither_0<_i5.Failure, _i6.ProductList>(
          this,
          Invocation.method(
            #getCachedProducts,
            [],
            {
              #searchQuery: searchQuery,
              #filters: filters,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ProductList>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> cacheProducts(
          List<_i8.Product>? products) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheProducts,
          [products],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #cacheProducts,
            [products],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> cacheProduct(
          _i8.Product? product) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheProduct,
          [product],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #cacheProduct,
            [product],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #clearCache,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<bool> hasCachedProducts() => (super.noSuchMethod(
        Invocation.method(
          #hasCachedProducts,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<DateTime?> getCacheTimestamp() => (super.noSuchMethod(
        Invocation.method(
          #getCacheTimestamp,
          [],
        ),
        returnValue: _i4.Future<DateTime?>.value(),
      ) as _i4.Future<DateTime?>);
}
